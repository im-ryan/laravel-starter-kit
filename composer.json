{
    "$schema": "https://getcomposer.org/schema.json",
    "name": "im-ryan/laravel-starter-kit",
    "type": "project",
    "description": "A production-ready Laravel starter kit with world-class developer experience. Features AI-powered development tools, modern tech stack, comprehensive testing, and automated quality assurance.",
    "keywords": [
        "laravel",
        "starter-kit",
        "vue3",
        "typescript",
        "inertia",
        "tailwind",
        "pest",
        "ai-development",
        "developer-experience"
    ],
    "license": "MIT",
    "require": {
        "php": "^8.4",
        "beacon-hq/pennant-beam": "^0.2.0",
        "inertiajs/inertia-laravel": "^2.0.6",
        "laravel/framework": "^12.30.1",
        "laravel/pennant": "^1.18",
        "laravel/tinker": "^2.10.1",
        "laravel/wayfinder": "^0.1.12",
        "laravel/workos": "^0.5.0",
        "nunomaduro/essentials": "^1.0",
        "spatie/laravel-data": "^4.17",
        "spatie/laravel-typescript-transformer": "^2.5"
    },
    "require-dev": {
        "barryvdh/laravel-ide-helper": "^3.6",
        "driftingly/rector-laravel": "^2.0.7",
        "fakerphp/faker": "^1.24.1",
        "larastan/larastan": "^3.7.2",
        "laravel/boost": "^1.2",
        "laravel/pail": "^1.2.3",
        "laravel/pint": "^1.25.1",
        "laravel/sail": "^1.45",
        "laravel/telescope": "^5.11",
        "mockery/mockery": "^1.6.12",
        "nunomaduro/collision": "^8.8.2",
        "peckphp/peck": "^0.1.3",
        "pestphp/pest": "^4.1",
        "pestphp/pest-plugin-laravel": "^4.0",
        "projektgopher/whisky": "^0.7.4",
        "rector/rector": "^2.1.7",
        "ryoluo/sail-ssl": "^1.4"
    },
    "autoload": {
        "psr-4": {
            "App\\": "app/",
            "Database\\Factories\\": "database/factories/",
            "Database\\Seeders\\": "database/seeders/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Tests\\": "tests/"
        }
    },
    "scripts": {
        "post-autoload-dump": [
            "Illuminate\\Foundation\\ComposerScripts::postAutoloadDump",
            "@php artisan package:discover --ansi",
            "@util:ide",
            "@util:hooks",
            "@util:ai"
        ],
        "post-update-cmd": [
            "@php artisan vendor:publish --tag=laravel-assets --ansi --force"
        ],
        "post-root-package-install": [
            "@php -r \"file_exists('.env') || copy('.env.example', '.env');\""
        ],
        "post-create-project-cmd": [
            "@php artisan key:generate --ansi",
            "@php -r \"file_exists('database/database.sqlite') || touch('database/database.sqlite');\"",
            "@php artisan migrate --graceful --ansi"
        ],
        "dev": [
            "Composer\\Config::disableProcessTimeout",
            "npx concurrently -c \"#93c5fd,#c4b5fd,#fb7185,#fdba74\" \"php artisan serve\" \"php artisan queue:listen --tries=1\" \"php artisan pail --timeout=0\" \"pnpm run dev\" --names=server,queue,logs,vite --kill-others"
        ],
        "dev:ssr": [
            "pnpm run build:ssr",
            "Composer\\Config::disableProcessTimeout",
            "npx concurrently -c \"#93c5fd,#c4b5fd,#fb7185,#fdba74\" \"php artisan serve\" \"php artisan queue:listen --tries=1\" \"php artisan pail --timeout=0\" \"php artisan inertia:start-ssr\" --names=server,queue,logs,ssr --kill-others"
        ],
        "test": [
            "@app:clear-config",
            "@test:coverage"
        ],
        "app:clear-config": "@php artisan config:clear --ansi --quiet",
        "app:format": [
            "pint --ansi",
            "pnpm run format"
        ],
        "app:lint": [
            "phpstan analyse --ansi",
            "pnpm run lint"
        ],
        "app:patch": [
            "@composer update --with-all-dependencies --patch-only --root-reqs --prefer-dist --prefer-stable --no-interaction --ansi",
            "@composer bump",
            "pnpm update",
            "pnpm audit --prod --no-optional --fix"
        ],
        "app:refactor": "rector --ansi",
        "app:spelling": "peck --ansi",
        "app:spelling-ignore": "peck --ansi --ignore-all",
        "ci:audit": [
            "composer audit --ansi --abandoned fail --locked --no-dev",
            "pnpm audit --prod --no-optional"
        ],
        "ci:format": [
            "pint --dirty --ansi --bail",
            "pnpm run format:check"
        ],
        "ci:lint": [
            "phpstan analyse --ansi --no-progress",
            "pnpm run lint:check"
        ],
        "ci:list": [
            "@ci:format",
            "@ci:refactor",
            "@ci:lint",
            "@ci:spelling",
            "@app:clear-config",
            "@ci:test",
            "@ci:audit",
            "@ci:outdated"
        ],
        "ci:outdated": [
            "composer outdated --ansi --locked --direct --strict",
            "pnpm outdated --prod --no-optional"
        ],
        "ci:refactor": "rector --ansi --dry-run --no-progress-bar --no-diffs",
        "ci:spelling": "peck --ansi --quiet",
        "ci:test": "pest --parallel --bail --coverage --min=100",
        "qa": [
            "@util:ide",
            "@app:format",
            "@app:refactor",
            "@app:lint",
            "@app:spelling",
            "@test"
        ],
        "test:coverage": "pest --parallel --coverage --min=100",
        "test:feature": "pest --parallel --testsuite Feature",
        "test:unit": "pest --parallel --testsuite Unit",
        "test:arch": "pest --parallel --testsuite Architecture",
        "util:ai": [
            "@php artisan boost:install --no-interaction --ansi",
            "@php -r \"is_dir('.clinerules') || mkdir('.clinerules');\"",
            "@php -r \"file_exists('.clinerules/CLAUDE.md') || touch('.clinerules/CLAUDE.md');\""
        ],
        "util:hooks": "whisky update",
        "util:ide": [
            "@php artisan ide-helper:generate",
            "@php artisan ide-helper:models --nowrite"
        ]
    },
    "scripts-descriptions": {
        "app:audit": "List known codebase security vulnerabilities",
        "app:clear-config": "Clear Laravel's application cache",
        "app:format": "Automatically format the codebase to enforce a consistent coding style",
        "app:lint": "Analyze the codebase to catch errors and bad patterns to enforce quality standards",
        "app:patch": "Upgrade application dependency patches without any breaking changes",
        "app:refactor": "Automatically refactor and upgrade PHP code to modern standards for improved code quality and maintainability",
        "app:spelling": "Scan the codebase for any spelling mistakes",
        "app:spelling-ignore": "Ignore all spelling mistakes",
        "ci:audit": "Check if the application has any dependencies with known security vulnerabilities",
        "ci:format": "Check if the codebase conforms to the accepted coding style without making changes",
        "ci:lint": "Check if the codebase conforms to the accepted quality standards without making changes",
        "ci:list": "Run all checks to ensure the codebase adheres to the defined standards without making changes",
        "ci:outdated": "Check if the application has any outdated dependencies",
        "ci:refactor": "Check if all PHP code conforms to modern PHP standards",
        "ci:spelling": "Check if the codebase has any spelling mistakes",
        "ci:test": "Check if all application tests pass and that the code coverage meets the minimum threshold",
        "dev": "Launch the application development environment",
        "qa": "Fix all enforced code standards, then run all application tests",
        "test": "Run all application tests in parallel with a code-coverage report",
        "test:coverage": "Run all application tests in parallel with a code-coverage report",
        "test:feature": "Run all application feature tests in parallel",
        "test:unit": "Run all application unit tests in parallel",
        "util:ai": "Generate coding agent rule files",
        "util:hooks": "Update the automated git hook scripts",
        "util:ide": "Generate IDE helper files, metadata and model annotations"
    },
    "pnpm": {
        "overrides": {
            "@vueuse/core": "^13.9.0",
            "lucide-vue-next": "^0.544.0"
        }
    },
    "extra": {
        "laravel": {
            "dont-discover": [
                "laravel/telescope"
            ]
        }
    },
    "config": {
        "optimize-autoloader": true,
        "preferred-install": "dist",
        "sort-packages": true,
        "allow-plugins": {
            "pestphp/pest-plugin": true,
            "php-http/discovery": true
        }
    },
    "minimum-stability": "dev",
    "prefer-stable": true
}
